--------------------------
 Notas para git en Platzi
--------------------------

--------------------------
     Iniciando con GIt
--------------------------


Git es un sistema de control de versiones

El cual esta repartido en una estructura de arbol,

	1. Working area
	2. Stating Area
	3. Repository

GIT va generando un historial de tu proyecto sobre un registro llamado repositorio. 

Atravez del uso de commits.

Para trabajar con este, debemos instalarlo en nuestro equipo, de acuerdo a la version de nuestro sistema operativo...

	windows:	git_bash.exe
	linux:		sudo apt-get install git

Una ve instalado podemos confirmar que lo tenemos... 
	
	$git --version

Y procederemos a configurar nuestros datos

	$ git config --global user.name "John Doe"
	$ git config --global user.email johndoe@example.com

	$ git config --global color.ui true

Y confirmamos que esten bien escritos con un 

	$ git config --list
		user.name=Ricardo
		user.email=ricardomartin67@gmail.com
		color.ui=true
		core.repositoryformatversion=0
		core.filemode=true
		core.bare=false
		core.logallrefupdates=true

Una vez tenemos esto listo, podemos empezar a trabajar...

Para esto hay que ubicarnos en la carpeta de nuestro proyecto

	ricardo@ricardo-Inspiron-5420:~/Documentos/name_folder$

y digitar el siguiente comando

	$ git init

Para iniciar a registrar todos los cambios que vallamos haciendo

	$ git status

Es otro comando que permite hacer el seguimiento de nuestro respositorio, y nos permite ver que cambios estan pendientes para un commit

Una vez hemos realizado nuestro cambios, procedemos a digitar

	$ git add -A : Que agrega todos los cambios hasta el momento

o si queremos

	$ git add [name_file] : El archivo al que le hicimos el cambio

Y Luego agregamos el commit, que es como las observacion de los cambios realizados

	$ git commit -m "Nuestro comentario"

Y asi a medida de mas cambios, mas commits, un avance de todo el proyecto.

Para llevar un backup de los commits que hacemos, utilizamos la siguiente linea

	$ git log > commit.txt

Ahora lo bueno...

Para poder viajar en el tiempo de nuestro proyecto, desde el principio hasta donde lo llevamos, utilizamos la siguiente linea

	$ git checkout [id_commit (6e590701f4a3f5cfeeb358763594718e65eea75a)]

Y alli podemos ir mirando como estaba nuestro proyecto al momento de hacer ese commit...

Ahora el lado oscuro...

	$ git reset

	Este comando borra los commits que siguen al punto que estamos mirando

	Ver http://git.miguelnieva.com/#/24 para orientarse

	Tener presente

	git reset soft, se mantienen los cambios de nuestra working area, pero altera nuestro repositorio.

	git reset mist el staging area se borra 

	git reset --hard es el que nos borra de todo, desde nuestro working area hasta nuestro repositorio. 

	Por eso es IMPORTANTE realizar un git log >, como backup de nuestros proyectos

--------------------------
  Uso de Ramas - Branches
--------------------------







